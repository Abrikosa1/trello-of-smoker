{"version":3,"sources":["components/UserContext.ts","components/NameModal/NameModal.tsx","components/Header/Header.tsx","hooks/useOutsideAlerter.tsx","components/ListsDataContext.tsx","components/AddListForm/AddListForm.tsx","components/Comment/CommentComponent.tsx","components/CommentsList/CommentsList.tsx","components/TaskModal/TaskModal.tsx","components/TaskCard/TaskCard.tsx","components/AddTaskForm/AddTaskform.tsx","components/TasksList/TasksList.tsx","components/Main/Main.tsx","dataReducer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UserContext","createContext","username","localStorage","getItem","setUsername","NameModal","inputUsername","useContext","useState","show","setShow","handleClose","useEffect","Modal","onHide","backdrop","keyboard","animation","centered","Header","closeButton","Title","Form","onSubmit","e","preventDefault","setItem","Body","InputGroup","FormControl","onChange","target","value","trim","placeholder","aria-label","aria-describedby","required","Footer","Button","variant","type","Navbar","collapseOnSelect","expand","bg","className","Brand","Text","Badge","pill","useOutsideAlerter","ref","setState","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","ListsDataContext","lists","JSON","parse","dispatch","AddListForm","setShowForm","newList","setNewList","listTitleInput","useRef","Group","controlId","style","marginBottom","Control","display","justifyContent","onClick","length","payload","focus","marginTop","CommentComponent","list","task","comment","author","date","Date","create_time","month","toLocaleString","day","getDate","time","hour","minute","hour12","edit","setEdit","text","editedComment","setEditedComment","onKeyUp","height","scrollHeight","disabled","listId","id","taskId","commentId","newComment","CommentsList","comments","map","TaskModal","setTaskModalShow","taskModalShow","handleCloseModal","handleEditDescription","description","setDescription","setNewComment","textAreaAdjust","aria-labelledby","dialogClassName","title","complete","newTitle","onBlur","newDesc","checked","addedComment","TaskCard","AddTaskform","setOpened","newTask","setNewTask","textInput","as","rows","autoFocus","tasks","newTaskTitle","console","log","TasksList","opened","wrapperRef","item","Main","showForm","dataReducer","action","filter","added","initialComments1","initialComments2","initialLists","stringify","App","useReducer","name","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.21026162.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\ninterface IContext {\r\n  username: string | null,\r\n  setUsername: (active: string) => void\r\n};\r\n\r\nexport const UserContext = createContext<IContext>({\r\n  username: localStorage.getItem('username') || null,\r\n  setUsername: () => {}\r\n});","import React, { useState, useEffect, useContext } from 'react';\r\nimport { UserContext } from '../UserContext';\r\nimport { Form, Modal, Button, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nconst NameModal: React.FC = () => {\r\n\r\n  let inputUsername: string;\r\n\r\n  const { setUsername } = useContext(UserContext);\r\n\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n  const changeUsername = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      inputUsername = e.target.value.trim();\r\n  }\r\n\r\n  const submitModal = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n      setUsername(inputUsername);\r\n      localStorage.setItem('username', inputUsername);\r\n      handleClose();\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!localStorage.getItem('username')) {\r\n      handleShow();\r\n    } \r\n  },[])\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        animation={false}\r\n        centered \r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Oops... what is your username?</Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={submitModal}>\r\n          <Modal.Body>\r\n            <InputGroup>\r\n              <FormControl onChange={changeUsername}\r\n                placeholder=\"Input your username\"\r\n                aria-label=\"Recipient's username\"\r\n                aria-describedby=\"basic-addon2\"\r\n                required\r\n              />\r\n            </InputGroup>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NameModal;","import React, { useContext } from 'react';\r\nimport NameModal from '../NameModal/NameModal';\r\nimport { Navbar, Badge } from \"react-bootstrap\";\r\nimport { UserContext } from '../UserContext';\r\n\r\n\r\nconst Header: React.FC = () => {\r\n \r\n  const { username } = useContext(UserContext);\r\n\r\n\r\n  return(\r\n    <> \r\n      <style type=\"text/css\">\r\n      {`\r\n      .badge-xxl {\r\n        font-size: inherit;\r\n      }\r\n      `}\r\n    </style>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" className=\"justify-content-between\">\r\n\r\n        <Navbar.Brand>Trello(no)</Navbar.Brand>\r\n  \r\n        <Navbar.Text >\r\n          Signed in as: <Badge pill variant=\"info\" className=\"badge-xxl\" >{username ? username : 'Неопознанный вомбат'}</Badge>\r\n        </Navbar.Text>\r\n       \r\n      </Navbar>\r\n      <NameModal />\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default Header;","\r\nimport React, { RefObject, SetStateAction, useEffect } from 'react';\r\n\r\n\r\nexport const useOutsideAlerter = (ref: RefObject<HTMLElement>, setState: React.Dispatch<SetStateAction<boolean>>) => {\r\n  useEffect(() => {\r\n    function handleClickOutside(event: any) {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        setState(false);\r\n      }\r\n    }\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [ref, setState]);\r\n}","import { createContext, Dispatch } from 'react';\r\nimport { Actions } from '../dataReducer';\r\nimport { List } from '../types';\r\n\r\ninterface IListsDataContext {\r\n  lists: Array<List>;\r\n  dispatch: Dispatch<Actions>;\r\n};\r\n\r\nexport const ListsDataContext = createContext<IListsDataContext>({\r\n  lists: JSON.parse(localStorage.getItem('lists') as string),\r\n  dispatch: () => {}\r\n});","import React, { SetStateAction, useContext, useRef, useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { ListsDataContext } from '../ListsDataContext';\r\n\r\ninterface IAddListFormProps {\r\n  setShowForm: React.Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst AddListForm: React.FC<IAddListFormProps> = ({setShowForm }) => {\r\n  const { dispatch } = useContext(ListsDataContext);\r\n  const [newList, setNewList] = useState('');\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setNewList(e.target.value);\r\n  };\r\n\r\n  const listTitleInput = useRef<HTMLInputElement>(null);\r\n  const handleSubmit = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    if(newList.length > 1) {\r\n      dispatch({\r\n        type: 'ADD_LIST',\r\n        payload: newList\r\n      });\r\n      setShowForm(false);\r\n    }\r\n    else {\r\n      listTitleInput.current!.focus();\r\n    }\r\n  };\r\n  const handleCancel = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    setShowForm(false);\r\n  };\r\n  return(\r\n    <Form>\r\n      <Form.Group className=\"add-list__form\" controlId=\"exampleForm.ControlTextarea1\" style={{ marginBottom: '0px' }}>\r\n        <Form.Control value={newList} \r\n          onChange={handleChange}\r\n          className=\"add-list__input\" \r\n          placeholder=\"Enter list title...\" \r\n          ref={listTitleInput}\r\n       />\r\n        <Form.Group style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '3px'}}>\r\n          <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit} style={{ marginTop: '8px' }}>\r\n            Submit\r\n          </Button>\r\n          <Button variant=\"danger\" type=\"submit\" onClick={handleCancel} style={{ marginTop: '8px' }} >\r\n            Cancel\r\n          </Button>\r\n        </Form.Group>\r\n        \r\n      </Form.Group>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default AddListForm;","import React, { useContext, useState } from 'react';\r\nimport { Comment, List, Task } from '../../types';\r\nimport { ListsDataContext } from '../ListsDataContext';\r\nimport { UserContext } from '../UserContext';\r\nimport './commentComponent.css';\r\nimport { BsChatFill } from \"react-icons/bs\";\r\n\r\ninterface IComment {\r\n  comment: Comment;\r\n  task: Task;\r\n  list: List;\r\n}\r\n\r\nconst CommentComponent: React.FC<IComment> = ({ list, task, comment }) => {\r\n  const { dispatch } = useContext(ListsDataContext);\r\n\r\n  const author = useContext(UserContext);\r\n  const date: Date = new Date(comment.create_time);\r\n  const month = date.toLocaleString('en-en', { month: 'short' });\r\n  const day = date.getDate();\r\n  const time = date.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\r\n\r\n\r\n  /* Delete comment */\r\n  const hancleClickDeleteComment = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    dispatch({\r\n      type: 'DELETE_TASK_COMMENT',\r\n      payload: {listId: list.id, taskId: task.id, commentId: comment.id}\r\n    })\r\n  };\r\n  \r\n\r\n  /* Edit comment */\r\n  const [edit, setEdit] = useState(false);\r\n  const [editedComment, setEditedComment] = useState(comment.text);\r\n\r\n  const handleEditComment = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    setEdit(!edit);\r\n  };\r\n\r\n  const hancleClickEditComment = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    setEdit(true);\r\n  };\r\n  \r\n  const handleCommentChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setEditedComment(e.target.value);\r\n  }\r\n\r\n  const hancleSubmitEditComment = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    dispatch({\r\n      type: 'EDIT_TASK_COMMENT',\r\n      payload: {listId: list.id, taskId: task.id, commentId: comment.id, newComment: editedComment}\r\n    })\r\n    setEdit(false);\r\n  };\r\n\r\n\r\n  \r\n  // Для автоматического увеличения высоты texarea\r\n  const textAreaAdjust = (e: any) => {\r\n    e.target.style.height = '1px';\r\n    e.target.style.height = e.target.scrollHeight +'px';\r\n  };\r\n\r\n\r\n  return (\r\n    <div key={comment.id} className=\"comment__wrapper\">\r\n      <div className=\"comment__header\">\r\n        <span className=\"comment__author\">{comment.author}</span>\r\n        <span className=\"comment__date\">{month + ' ' + day + ' at ' + time}</span>\r\n      </div>\r\n      <div className=\"comment__body\">\r\n        <span className=\"comment__icon\"><BsChatFill /></span>\r\n        {!edit && <div className=\"comment__card\">\r\n          <p className=\"comment__text\">{comment.text}</p>\r\n        </div>}\r\n      </div>\r\n      <div className=\"comment__footer\">\r\n        {((comment.author === author.username) && !edit) && <span className=\"comment__edit\" onClick={hancleClickEditComment}>Edit</span>}\r\n          <div className={`task-description__edit ${!edit ? 'edit_closed' : ''}`}>\r\n              <textarea onKeyUp={textAreaAdjust} value={editedComment} onChange={handleCommentChange} className=\"description-edit__texarea card-description\" placeholder=\"Oh, have you changed your mind?\" >\r\n              </textarea>\r\n              <div className=\"edit-controls\">\r\n                <input className=\"\" disabled={editedComment.length === 0} type=\"submit\" value=\"Save\" onClick={hancleSubmitEditComment}/>\r\n                <span className=\"edit-controls__cancel-icon icon-sm\" onClick={handleEditComment}>&#10006;</span>\r\n              </div>\r\n          </div>\r\n        {((comment.author === author.username) && !edit) && <span className=\"comment__edit\" onClick={hancleClickDeleteComment}>Deliete</span>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentComponent;","import React from 'react';\r\nimport { Task, List } from '../../types';\r\nimport CommentComponent from '../Comment/CommentComponent';\r\nimport './commentsList.css'\r\n\r\ninterface ICommentsList {\r\n  task: Task;\r\n  list: List;\r\n}\r\n\r\nconst CommentsList: React.FC<ICommentsList> = ({ task, list }) => {\r\n  return (\r\n    <div className=\"comments-box\">\r\n      {task.comments.map(comment => {\r\n        return (<CommentComponent key={comment.id} comment={comment} task={task} list={list} />)\r\n      })}   \r\n    </div>  \r\n  )\r\n};\r\n\r\nexport default CommentsList;","import React, { SetStateAction, useContext, useRef, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { List, Task } from '../../types';\r\nimport { UserContext } from '../UserContext';\r\nimport { Comment } from '../../types';\r\nimport './taskModal.css';\r\nimport { ListsDataContext } from '../ListsDataContext';\r\nimport CommentsList from '../CommentsList/CommentsList';\r\nimport { IoIosChatbubbles } from \"react-icons/io\";\r\nimport { MdDescription } from \"react-icons/md\";\r\n\r\ninterface ITaskModal {\r\n  task: Task;\r\n  taskModalShow: boolean;\r\n  setTaskModalShow: React.Dispatch<SetStateAction<boolean>>;\r\n  list: List;\r\n}\r\n\r\n\r\nconst TaskModal: React.FC<ITaskModal> = ({ task, list, setTaskModalShow,  taskModalShow}) => {\r\n  const { dispatch } = useContext(ListsDataContext);\r\n\r\n     /* get current username from context*/\r\n  const currentUser = useContext(UserContext);\r\n  const author = currentUser.username;\r\n  \r\n  \r\n  const ref = useRef(null);\r\n  const handleCloseModal = () => {\r\n    setTaskModalShow(false);\r\n  }\r\n\r\n  const handleTitleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    dispatch({\r\n      type: 'RENAME_TASK',\r\n      payload: {listId: list.id, taskId: task.id, newTitle: e.target.value}\r\n    })\r\n  };\r\n\r\n  const handleTitleBlur = (e: React.FocusEvent<HTMLTextAreaElement>) => {\r\n    if(e.target.value.length < 1) {\r\n      e.target.focus();\r\n    }\r\n  }\r\n\r\n  const [edit, setEdit] = useState(false);\r\n  const handleEditDescription = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    setEdit(!edit);\r\n  };\r\n\r\n\r\n  const [description, setDescription] = useState(task.description);\r\n  const handleDescriptionChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setDescription(e.target.value);\r\n  }\r\n   const handleDescriptionSubmit = (e: React.MouseEvent<HTMLInputElement>) => {\r\n     //task.description = description;\r\n     dispatch({\r\n       type: 'EDIT_TASK_DESCRIPTION',\r\n       payload: { listId: list.id, taskId: task.id, newDesc: description}\r\n     })\r\n     setEdit(false);\r\n   }\r\n  \r\n   const handleClickDeleteTask = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    dispatch({\r\n      type: 'DELETE_TASK',\r\n      payload: {listId: list.id, taskId: task.id}\r\n      })\r\n   };\r\n\r\n\r\n\r\n   /* add comment */\r\n   const [newComment, setNewComment] = useState('');\r\n   const handleCommentChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setNewComment(e.target.value);\r\n   };\r\n\r\n  const handleCommentSubmit = (e: React.MouseEvent<HTMLInputElement>) => {\r\n    e.preventDefault();\r\n    const addedComment:Comment = { id: task.comments.length + 1, text: newComment, author: author!, create_time: new Date()};\r\n    dispatch({\r\n      type: 'ADD_TASK_COMMENT',\r\n      payload: {listId: list.id, taskId: task.id, newComment: addedComment}\r\n    })\r\n    setNewComment('')\r\n   }\r\n\r\n\r\n\r\n\r\n  // Для автоматического увеличения высоты texarea\r\n  const textAreaAdjust = (e: any) => {\r\n    e.target.style.height = '1px';\r\n    e.target.style.height = e.target.scrollHeight +'px';\r\n  };\r\n\r\n\r\n  const handleToggleTaskCompleted = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch({\r\n      type: 'TOGGLE_TASK_COMPLETED',\r\n      payload: {listId: list.id, taskId: task.id}\r\n    })\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={taskModalShow}\r\n      onHide={handleCloseModal}\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n      dialogClassName=\"task-modal__wrapper\"\r\n      animation={false}\r\n      centered \r\n      ref={ref}\r\n    >\r\n        <span className=\"icon-sm icon-delete task-modal__close\" onClick={handleCloseModal}>&#10006;</span>\r\n        <div className=\"task-details u-clearfix\">\r\n          <div className=\"task-details__header\">\r\n            <span className=\"task-details__icon\">&#128073;</span>\r\n            <div className=\"task-details__title\">\r\n              <textarea value={task.title} onKeyUp={textAreaAdjust} className={`task-details__title task-details__input ${task.complete ? 'complete' : \r\n            ''}`} onChange={handleTitleChange} onBlur={handleTitleBlur} required></textarea>\r\n            </div>\r\n            <div className=\"task-details__list-info\">\r\n              <p className=\"u-inline-block u-bottom\">in list <span className=\"task-details__list-name\">{list.title}</span></p>\r\n            </div>\r\n          </div>\r\n          <div className=\"task-details__main\">\r\n            <div className=\"task-details__task-description\">\r\n              \r\n              <div className=\"task-description__title\">\r\n                <span className=\"task-description__icon\"><MdDescription /></span>\r\n                <h3 className=\"task-description__heading\">Description</h3>\r\n                <div className=\"task-description__task-editable\">\r\n                  <button className=\"task-editable__button\" onClick={handleEditDescription}>Edit</button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"task-description__text\">\r\n                {(task.description && !edit) ? <p>{task.description}</p> : \"\"}\r\n                <div className={`task-description__edit ${!edit ? 'edit_closed' : ''}`}>\r\n                  <textarea onKeyUp={textAreaAdjust} value={description} onChange={handleDescriptionChange} className=\"description-edit__texarea card-description\" placeholder=\"Add a more detailed description…\" >\r\n                  </textarea>\r\n                  <div className=\"edit-controls\">\r\n                    <input className=\"edit-controls__save-btn\" type=\"submit\" value=\"Save\" onClick={handleDescriptionSubmit}/>\r\n                    <span className=\"edit-controls__cancel-icon icon-sm\" onClick={handleEditDescription}>&#10006;</span>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n              <div className=\"task-description__title task-description__title_author\">\r\n                <span className=\"task-description__author-icon\">&#9997;</span>\r\n                <h3 className=\"task-description__heading\">Author</h3>\r\n              </div>\r\n              <div className=\"task-description__text\">\r\n                <p>{task.username}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"task-details__task-activities\">\r\n\r\n              <div className=\"task-description__title task-description__title_author\">\r\n                <span className=\"task-description__icon\"><IoIosChatbubbles /></span>\r\n                <h3 className=\"task-description__heading\">Activity</h3>\r\n                <div className=\"task__complete\">\r\n                  <span>Set as completed: &nbsp;</span>\r\n                  <input className=\"card__checkbox\" type=\"checkbox\" aria-label=\"Checkbox for following text input\" checked={task.complete} onChange={handleToggleTaskCompleted} />  \r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"task-comments\">\r\n                <form>\r\n                  <div className=\"comment-box\">\r\n                    <textarea className=\"comment-box__input\" value={newComment} placeholder=\"Write a comment…\" onKeyUp={textAreaAdjust} onChange={handleCommentChange}>\r\n                    </textarea>\r\n                    <div className=\"comment-box__save\">\r\n                      <input className=\"\" disabled={newComment.length === 0} type=\"submit\" value=\"Save\" onClick={handleCommentSubmit}></input>\r\n                      <p className=\"author\">author:&nbsp;<span className=\"author-initials\" title={author!} aria-label={author!}>{\" \" + author}</span></p>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n              {/* <!-- /.task-comments --> */}\r\n              <CommentsList list={list} task={task} />\r\n            </div>\r\n \r\n          </div>\r\n     \r\n          <button className=\"task-editable__button delete-button\" onClick={handleClickDeleteTask}>Delete</button>\r\n\r\n        </div> \r\n        {/* <!-- /.task-details --> */}\r\n\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default TaskModal;","import React, { useContext, useState } from 'react';\r\nimport { List, Task } from '../../types';\r\nimport { ListsDataContext } from '../ListsDataContext';\r\nimport TaskModal from '../TaskModal/TaskModal';\r\nimport './taskCard.css';\r\nimport { BsChatFill } from \"react-icons/bs\";\r\n\r\ninterface ITaskCardProps {\r\n  task: Task;\r\n  list: List;\r\n};\r\n\r\nconst TaskCard: React.FC<ITaskCardProps> = ({ task, list }) => {\r\n  const { dispatch } = useContext(ListsDataContext);\r\n  \r\n  const handleDeleteTask = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    dispatch({\r\n      type: 'DELETE_TASK',\r\n      payload: {listId: list.id, taskId: task.id}\r\n    })\r\n  };\r\n\r\n\r\n  const [taskModalShow, setTaskModalShow] = useState(false);\r\n\r\n  const handleShowModal = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    setTaskModalShow(true);\r\n  };\r\n\r\n\r\n  \r\n  \r\n  return( \r\n    <>\r\n    <div className=\"card\" key={ task.title } onClick={handleShowModal}>\r\n      <div className=\"card__details\">\r\n        <div className=\"card__header\">\r\n          <span className={`card__title ${task.complete ? \"complete\" : \"\"}`} >{task.title}</span>\r\n          <span className=\"icon-sm icon-delete\" onClick={handleDeleteTask}>&#10006;</span>\r\n        </div>\r\n        <div className=\"card__badges\" >\r\n          <div className=\"card__badge\">\r\n            <span className=\"badge__icon badge__icon_sm badge__icon_comment\" ><BsChatFill /></span>\r\n            <span className=\"badge__text\">{task.comments.length}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <TaskModal taskModalShow={taskModalShow} setTaskModalShow={setTaskModalShow} task={task} list={list} />\r\n  </>\r\n  );\r\n}\r\n\r\nexport default TaskCard;","import React, { SetStateAction, useContext, useRef, useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { List } from '../../types';\r\nimport { ListsDataContext } from '../ListsDataContext';\r\nimport { UserContext } from '../UserContext';\r\n\r\nimport './addTaskform.css';\r\n\r\ninterface IAddTaskFormProps {\r\n  setOpened: React.Dispatch<SetStateAction<boolean>>;\r\n  list: List;\r\n}\r\n\r\nconst AddTaskform: React.FC<IAddTaskFormProps> = ({ setOpened, list }) => {\r\n  const { dispatch } = useContext(ListsDataContext);\r\n  //add task\r\n  const [newTask, setNewTask] = useState('');\r\n  const { username } = useContext(UserContext);\r\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setNewTask(e.target.value);\r\n  };\r\n\r\n  const textInput = useRef<HTMLTextAreaElement>(null);\r\n  const handleSubmit = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    if(newTask.length > 0) {\r\n      dispatch({\r\n        type: 'ADD_TASK',\r\n        payload: { listId: list.id, taskId: list.tasks.length + 1, newTaskTitle: newTask, username: username!}\r\n      })\r\n      \r\n      setOpened(false);\r\n    } else {      \r\n      textInput.current!.focus();\r\n    }\r\n  };\r\n\r\n  //cancel add\r\n  const handleCancel = (e: any) => {\r\n    console.log('handleCancel');\r\n    e.preventDefault();\r\n      setOpened(false);\r\n  };\r\n\r\n  \r\n  return(\r\n     <div className=\"task-card__composer\" >\r\n       <div  className=\"card\" >\r\n         <div className=\"card__details\">\r\n            <Form className=\"card-add__form\">\r\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\" style={{ marginBottom: '3px' }}>\r\n                <Form.Control ref={textInput} value={newTask} \r\n                  onChange={handleChange}\r\n                  className=\"card-add__textarea\" \r\n                  placeholder=\"Enter a title for this card…\" \r\n                  as=\"textarea\" \r\n                  rows={3} \r\n                  required\r\n                  autoFocus\r\n                />\r\n                <Form.Group style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '3px' }} >\r\n                  <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}  >\r\n                    Submit\r\n                  </Button>\r\n                  <Button variant=\"danger\" type=\"submit\" onClick={handleCancel}>\r\n                    Cancel\r\n                  </Button>\r\n                </Form.Group>\r\n              </Form.Group>\r\n            </Form>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTaskform;","import React, { useContext, useRef, useState } from 'react';\r\nimport './tasksList.css';\r\nimport TaskCard from '../TaskCard/TaskCard';\r\nimport { List } from '../../types';\r\nimport AddTaskform from '../AddTaskForm/AddTaskform';\r\nimport { useOutsideAlerter } from '../../hooks/useOutsideAlerter';\r\nimport { ListsDataContext } from '../ListsDataContext';\r\n\r\n\r\ninterface ITasksListProps {\r\n  list: List;\r\n}\r\n\r\nconst TasksList: React.FC<ITasksListProps> = ({ list }) => {\r\n  const { dispatch } = useContext(ListsDataContext);\r\n  \r\n  const [opened, setOpened] = useState(false);\r\n  const addCard = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    e.preventDefault();\r\n    setOpened(!opened);\r\n  }\r\n\r\n  //List events handlers\r\n  const handleDeleteList = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    dispatch({\r\n      type: 'DELETE_LIST',\r\n      payload: list.id\r\n    })\r\n  };\r\n\r\n  const listTitleInput = useRef<HTMLTextAreaElement>(null);\r\n  \r\n  const handleRenameList = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    dispatch({\r\n      type: 'RENAME_LIST',\r\n      payload: { listId: list.id, newTitle: e.target.value }\r\n    })\r\n  };\r\n\r\n  const handleBlurList = (e: React.FocusEvent<HTMLTextAreaElement>) => {\r\n    if(e.target.value.length < 1) {\r\n      e.target.focus();\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const textAreaAdjust = (e: any) => {\r\n    e.target.style.height = '1px';\r\n    e.target.style.height = e.target.scrollHeight +'px';\r\n  };\r\n\r\n  /* хук для отлова клика за элементом */\r\n  const wrapperRef = useRef(null);\r\n  useOutsideAlerter(wrapperRef, setOpened);\r\n\r\n\r\n\r\n  return(\r\n    <div className=\"tasks-list\" >\r\n      <div className=\"tasks-list__content\">\r\n        <div className=\"tasks-list__header\">\r\n          <textarea ref={listTitleInput}  className=\"tasks-list__title\" value={list.title} onKeyUp={textAreaAdjust} onChange={handleRenameList} onBlur={handleBlurList} />\r\n          <span className=\"icon-sm icon-delete\" onClick={handleDeleteList}>&#10006;</span>\r\n        </div>\r\n        <div className=\"tasks-list__cards u-fancy-scrollbar\">\r\n          {list.tasks.map(item => {\r\n            return (\r\n              <TaskCard key={item.id} list={list} task={item}  />\r\n            )\r\n          })}\r\n          \r\n           {opened && <div ref={wrapperRef}><AddTaskform setOpened={setOpened} list={list} /></div>}\r\n          \r\n        </div>\r\n        {!opened && <div className='tasks-list__card-composer '>\r\n          <div className=\"tasks-composer__open\">\r\n            <span className=\"icon-sm icon-add\"></span>\r\n            <span className=\"js-add-another-card\" onClick={addCard}>{list.tasks.length > 0 ? 'Add another card' : 'Add card'}</span>\r\n          </div> \r\n        </div>}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default TasksList;\r\n\r\n","import React, { useRef, useState } from 'react';\r\nimport { useOutsideAlerter } from '../../hooks/useOutsideAlerter';\r\nimport { List } from '../../types';\r\nimport AddListForm from '../AddListForm/AddListForm';\r\nimport TasksList from '../TasksList/TasksList';\r\n\r\nimport './main.css';\r\n\r\ninterface IMainListProps {\r\n  lists: Array<List>;\r\n}\r\n\r\nconst Main: React.FC<IMainListProps> = ({ lists }) => {\r\n\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const toggleAddList = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    e.preventDefault();\r\n    setShowForm(true);\r\n  };\r\n\r\n\r\n  /* хук для отлова клика за элементом */\r\n  const wrapperRef = useRef(null);\r\n  useOutsideAlerter(wrapperRef, setShowForm);\r\n\r\n  return(\r\n    <> \r\n      <main>\r\n        <div id=\"board\" className=\"board u-fancy-scrollbar\">\r\n          {lists.map(list => {\r\n            return (\r\n              <TasksList key={list.id} list={list} />\r\n            )\r\n          })}\r\n          <div ref={wrapperRef} className={`tasks-list__add-list tasks-list ${showForm ? \"mod-add\" : \"\"}`}>\r\n            {showForm ? <div ><AddListForm setShowForm={setShowForm}/></div> : ''}\r\n            <span className={`add-list__placeholder ${showForm ? \"hide\" : \"\"}`} onClick={toggleAddList}>\r\n              <span className=\"icon-sm icon-add\"></span>\r\n              {lists.length > 0 ? 'Add another list' : 'Add list '}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;","import { List, Comment } from \"./types\";\r\n\r\nexport type Actions = \r\n          | { type: 'ADD_LIST', payload: string} \r\n          | { type: 'DELETE_LIST', payload: number} \r\n          | { type: 'RENAME_LIST', payload: { listId: number, newTitle: string} }\r\n          | { type: 'ADD_TASK', payload: { listId: number, taskId: number, username: string, newTaskTitle: string} } \r\n          | { type: 'DELETE_TASK', payload: { listId: number, taskId: number} } \r\n          | { type: 'RENAME_TASK', payload: { listId: number, taskId: number, newTitle: string} } \r\n          | { type: 'TOGGLE_TASK_COMPLETED', payload: { listId: number, taskId: number} } \r\n          | { type: 'EDIT_TASK_DESCRIPTION', payload: { listId: number, taskId: number, newDesc: string} } \r\n          | { type: 'ADD_TASK_COMMENT', payload: { listId: number, taskId: number, newComment: Comment} } \r\n          | { type: 'DELETE_TASK_COMMENT', payload: { listId: number, taskId: number, commentId: number} } \r\n          | { type: 'EDIT_TASK_COMMENT', payload: { listId: number, taskId: number, commentId: number, newComment: string} } \r\n              \r\n  \r\n  //                     'ADD_LIST' | 'DELETE_LIST' | 'RENAME_LIST' |\r\n  //                     'ADD_TASK' | 'DELETE_TASK' | 'RENAME_TASK' |\r\n  //                     'TOGGLE_TASK_COMPLETED' | 'EDIT_TASK_DESCRIPTION' | \r\n  //                     'ADD_TASK_COMMENT' | 'DELETE_TASK_COMMENT' | 'EDIT_TASK_COMMENT'}\r\n\r\nconst dataReducer = (lists: Array<List>, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'ADD_LIST': \r\n      return [\r\n        ...lists, \r\n        {\r\n           id: lists.length + 1, \r\n           title: action.payload, \r\n           tasks : [] \r\n        }\r\n      ];\r\n    case 'DELETE_LIST':\r\n      return lists.filter((list: List) =>  list.id !== action.payload);\r\n    case 'RENAME_LIST':\r\n      return lists.map((list : List) => \r\n                    list.id === action.payload.listId\r\n                    ? {...list, title: action.payload.newTitle}\r\n                    : list);\r\n    case 'ADD_TASK':\r\n      const added = { id: action.payload.taskId, title: action.payload.newTaskTitle, description: \"\", username: action.payload.username || \"\", complete: false, create_time: new Date(), comments: [] };\r\n      return lists.map((list: List)  => {\r\n              if (list.id === action.payload.listId) {\r\n                return {...list, tasks: [...list.tasks, added]} \r\n              } else {\r\n                  return list;\r\n              }\r\n            });\r\n    case 'DELETE_TASK':\r\n      return lists.map((list: List) => {\r\n              if (list.id === action.payload.listId) {\r\n                return {...list, \r\n                          tasks: list.tasks.filter(task => {\r\n                              return task.id !== action.payload.taskId\r\n                          })\r\n                       } \r\n              } else {\r\n                  return list;\r\n              }\r\n            });\r\n    case 'RENAME_TASK':\r\n      return lists.map((list: List) => {\r\n              if (list.id === action.payload.listId) {\r\n                return {...list, \r\n                          tasks: list.tasks.map(task => \r\n                            task.id === action.payload.taskId \r\n                            ? {...task, title: action.payload.newTitle} \r\n                            : task)\r\n                      }\r\n                } else {\r\n                  return list;\r\n                }\r\n              });\r\n    case 'TOGGLE_TASK_COMPLETED':\r\n      return lists.map((list: List) => {\r\n              if (list.id === action.payload.listId) {\r\n                return {...list, \r\n                          tasks: list.tasks.map(task => \r\n                            task.id === action.payload.taskId \r\n                            ? {...task, complete: !task.complete} \r\n                            : task)\r\n                      }\r\n                } else {\r\n                  return list;\r\n                }\r\n              });\r\n    case 'EDIT_TASK_DESCRIPTION':\r\n      return lists.map((list: List) => {\r\n                if (list.id === action.payload.listId) {\r\n                  return {...list, \r\n                            tasks: list.tasks.map(task => \r\n                              task.id === action.payload.taskId \r\n                              ? {...task, description: action.payload.newDesc} \r\n                              : task)\r\n                        }\r\n                  } else {\r\n                    return list;\r\n                  }\r\n                });\r\n    case 'ADD_TASK_COMMENT':\r\n      return lists.map((list: List) => {\r\n        if (list.id === action.payload.listId) {\r\n          return {...list, \r\n                    tasks: list.tasks.map(task => \r\n                      task.id === action.payload.taskId\r\n                      ? {...task, comments: [...task.comments, action.payload.newComment]} \r\n                      : task)\r\n                }\r\n          } else {\r\n            return list;\r\n          }\r\n        });\r\n    case 'DELETE_TASK_COMMENT':\r\n      return lists.map((list: List) => {\r\n        if (list.id === action.payload.listId) {\r\n          return {...list, \r\n                    tasks: list.tasks.map(task => \r\n                      task.id === action.payload.taskId\r\n                      ? {...task, comments: task.comments.filter(comment => {\r\n                        return comment.id !== action.payload.commentId\r\n                      })} \r\n                      : task)\r\n                }\r\n          } else {\r\n            return list;\r\n          }\r\n        });\r\n    case 'EDIT_TASK_COMMENT':\r\n      return lists.map((list: List) => {\r\n                if (list.id === action.payload.listId) {\r\n                  return {...list, \r\n                            tasks: list.tasks.map(task => \r\n                              task.id === action.payload.taskId \r\n                              ? {...task, comments: task.comments.map(comment => \r\n                                comment.id === action.payload.commentId \r\n                                ? {...comment, text: action.payload.newComment}\r\n                                : comment\r\n                              )} \r\n                              : task)\r\n                        }\r\n                  } else {\r\n                    return list;\r\n                  }\r\n                });\r\n    default: \r\n      return lists;\r\n  }\r\n} \r\n\r\nexport default dataReducer;","import React, { useEffect, useState, useReducer } from 'react';\nimport Header from './components/Header/Header';\nimport Main from './components/Main/Main';\nimport { UserContext } from './components/UserContext';\nimport { ListsDataContext } from './components/ListsDataContext';\nimport dataReducer from './dataReducer';\nimport { List, Task, Comment } from './types';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\n\nconst initialComments1: Array<Comment> = [\n  { id: 0, text: 'Ку-ку', author: \"Ya\", create_time: new Date() }, \n  { id: 1, text: 'Вот это задачка', author: \"Вомбат\", create_time: new Date() }, \n  { id: 2, text: 'Блин, походу не сделаю', author: \"Ya\", create_time: new Date() }, \n]\n\nconst initialComments2: Array<Comment> = [\n  { id: 0, text: 'Коммент1', author: \"Ya\", create_time: new Date() }, \n  { id: 1, text: 'Коммент2', author: \"ывавыа\", create_time: new Date() }, \n  { id: 2, text: 'Коммент3', author: \"Ya\", create_time: new Date() }, \n]\n\nconst initialTasks1: Array<Task> = [\n  { id: 0, title: 'Ку-ку', description: \"Да-да, куку\", username: \"Вомбат\", complete: false, create_time: new Date(), comments: [] }, \n  { id: 1, title: 'Задачка', description: \"И кто-то должен ее сделать\", username: \"Не вомбат\", complete: true, create_time: new Date(), comments: [] }, \n  { id: 2, title: 'Еще одна', description: \"И эту тоже\", username: \"Вомбат\", complete: false, create_time: new Date(), comments: initialComments2 },\n]\n\nconst initialTasks2: Array<Task> = [\n  { id: 0, title: 'В магз за едой', description: \"Не забыть пельмени\", username: \"vasya\", complete: false, create_time: new Date(), comments: initialComments1 }, \n  { id: 1, title: 'Приготовить', description: \"Описание Описание Описание Описание Описание Описание Описание\", username: \"vasya\", complete: true, create_time: new Date(), comments: []}, \n  { id: 2, title: 'Съесть', description: \"Съееесть\", username: \"Вомбат\", complete: true, create_time: new Date(), comments: [] },\n  { id: 3, title: 'Все', description: \"Кайфовать, в общем\", username: \"dsfafw\", complete: true, create_time: new Date(), comments: [] },\n]\n\n\nlet initialLists: Array<List> = [\n  { id: 0, title: 'TODO', tasks : initialTasks1 },\n  { id: 1, title: 'In Progress', tasks : initialTasks2 },\n  { id: 2, title: 'Testing', tasks : [] },\n  { id: 3, title: 'Done', tasks : [] }\n]\n\nif(!localStorage.getItem('lists')) {\n  if(initialLists) {\n    localStorage.setItem('lists', JSON.stringify(initialLists));\n  } else {\n    localStorage.setItem('lists', JSON.stringify([]));\n  }\n}  \nfunction App() {\n\n  const [lists, dispatch] = useReducer(dataReducer, JSON.parse(localStorage.getItem('lists') as string));\n  const name = localStorage.getItem('username');\n  const [username, setUsername] = useState(name);\n\n  useEffect(() => {\n    localStorage.setItem('lists', JSON.stringify(lists));\n  }, [lists]);\n\n  return (\n    <> \n      <div className=\"app-wrapper\">\n        <ListsDataContext.Provider value={{ lists, dispatch }}>\n          <UserContext.Provider value={{ username, setUsername }}>\n            <Header />\n            {name && <Main lists={lists} />}\n          </UserContext.Provider>\n        </ListsDataContext.Provider>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}