{"version":3,"sources":["components/UserContext.ts","components/NameModal/NameModal.tsx","components/Header/Header.tsx","hooks/useOutsideAlerter.tsx","components/DataContext.ts","components/AddListForm/AddListForm.tsx","components/Comment/CommentComponent.tsx","components/CommentsList/CommentsList.tsx","components/TaskModal/TaskModal.tsx","components/TaskCard/TaskCard.tsx","components/AddTaskForm/AddTaskform.tsx","components/TasksList/TasksList.tsx","components/Main/Main.tsx","reducer.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UserContext","createContext","username","localStorage","getItem","setUsername","NameModal","inputUsername","useContext","useState","show","setShow","handleClose","useEffect","Modal","onHide","backdrop","keyboard","animation","centered","Header","closeButton","Title","Form","onSubmit","e","preventDefault","setItem","Body","InputGroup","FormControl","onChange","target","value","trim","placeholder","aria-label","aria-describedby","required","Footer","Button","variant","type","Navbar","collapseOnSelect","expand","bg","className","Brand","Text","Badge","pill","useOutsideAlerter","ref","setState","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","DataContext","state","JSON","parse","dispatch","AddListForm","setShowForm","newListTitle","setNewListTitle","listTitleInput","useRef","Group","controlId","style","marginBottom","Control","display","justifyContent","onClick","length","payload","focus","marginTop","CommentComponent","comment","author","date","Date","createTime","month","toLocaleString","day","getDate","time","hour","minute","hour12","edit","setEdit","text","editedComment","setEditedComment","onKeyUp","height","scrollHeight","disabled","commentId","id","newCommentText","CommentsList","task","list","comments","filter","taskId","map","TaskModal","setTaskModalShow","taskModalShow","handleCloseModal","handleEditDescription","description","setDescription","newComment","setNewComment","textAreaAdjust","aria-labelledby","dialogClassName","title","complete","newTitle","onBlur","newDesc","checked","addedComment","uuidv4","TaskCard","handleShowModal","commentsCount","AddTaskform","setOpened","newTask","setNewTask","textInput","as","rows","autoFocus","listId","newTaskTitle","console","log","TasksList","opened","tasksCount","tasks","wrapperRef","forEach","Main","lists","showForm","dataReducer","action","added","list0Id","list1Id","list2Id","list3Id","task0Id","task1Id","task2Id","task3Id","task4Id","task5Id","task6Id","cooment0Id","cooment1Id","cooment2Id","cooment3Id","cooment4Id","cooment5Id","initialComments","initialState","stringify","App","useReducer","reducer","name","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0d424d5a.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\ninterface IContext {\r\n  username: string | null,\r\n  setUsername: (active: string) => void\r\n};\r\n\r\nexport const UserContext = createContext<IContext>({\r\n  username: localStorage.getItem('username') || null,\r\n  setUsername: () => {}\r\n});","import React, { useState, useEffect, useContext } from 'react';\r\nimport { UserContext } from '../UserContext';\r\nimport { Form, Modal, Button, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nconst NameModal: React.FC = () => {\r\n\r\n  let inputUsername: string;\r\n\r\n  const { setUsername } = useContext(UserContext);\r\n\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n  const changeUsername = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      inputUsername = e.target.value.trim();\r\n  }\r\n\r\n  const submitModal = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n      setUsername(inputUsername);\r\n      localStorage.setItem('username', inputUsername);\r\n      handleClose();\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!localStorage.getItem('username')) {\r\n      handleShow();\r\n    } \r\n  },[])\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        animation={false}\r\n        centered \r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Oops... what is your username?</Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={submitModal}>\r\n          <Modal.Body>\r\n            <InputGroup>\r\n              <FormControl onChange={changeUsername}\r\n                placeholder=\"Input your username\"\r\n                aria-label=\"Recipient's username\"\r\n                aria-describedby=\"basic-addon2\"\r\n                required\r\n              />\r\n            </InputGroup>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NameModal;","import React, { useContext } from 'react';\r\nimport NameModal from '../NameModal/NameModal';\r\nimport { Navbar, Badge } from \"react-bootstrap\";\r\nimport { UserContext } from '../UserContext';\r\n\r\n\r\nconst Header: React.FC = () => {\r\n \r\n  const { username } = useContext(UserContext);\r\n\r\n\r\n  return(\r\n    <> \r\n      <style type=\"text/css\">\r\n      {`\r\n      .badge-xxl {\r\n        font-size: inherit;\r\n      }\r\n      `}\r\n    </style>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" className=\"justify-content-between\">\r\n\r\n        <Navbar.Brand>Trello(no)</Navbar.Brand>\r\n  \r\n        <Navbar.Text >\r\n          Signed in as: <Badge pill variant=\"info\" className=\"badge-xxl\" >{username ? username : 'Неопознанный вомбат'}</Badge>\r\n        </Navbar.Text>\r\n       \r\n      </Navbar>\r\n      <NameModal />\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default Header;","\r\nimport React, { RefObject, SetStateAction, useEffect } from 'react';\r\n\r\n\r\nexport const useOutsideAlerter = (ref: RefObject<HTMLElement>, setState: React.Dispatch<SetStateAction<boolean>>) => {\r\n  useEffect(() => {\r\n    function handleClickOutside(event: any) {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        setState(false);\r\n      }\r\n    }\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [ref, setState]);\r\n}","import { createContext, Dispatch } from 'react';\r\nimport { State } from '../types';\r\nimport { Actions } from '../reducer';\r\n\r\n\r\ninterface IDataContext {\r\n  state: State;\r\n  dispatch: Dispatch<Actions>;\r\n};\r\n\r\nexport const DataContext = createContext<IDataContext>({\r\n  state: JSON.parse(localStorage.getItem('data') as string),\r\n  dispatch: () => {}\r\n});","import React, { SetStateAction, useContext, useRef, useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { DataContext } from '../DataContext';\r\n\r\ninterface IAddListFormProps {\r\n  setShowForm: React.Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst AddListForm: React.FC<IAddListFormProps> = ({setShowForm }) => {\r\n\r\n  const { dispatch } = useContext(DataContext);\r\n  \r\n  const [newListTitle, setNewListTitle] = useState('');\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setNewListTitle(e.target.value);\r\n  };\r\n\r\n  const listTitleInput = useRef<HTMLInputElement>(null);\r\n  const handleSubmit = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    if(newListTitle.length > 1) {\r\n      dispatch({\r\n        type: 'ADD_LIST',\r\n        payload: newListTitle\r\n      });\r\n      setShowForm(false);\r\n    }\r\n    else {\r\n      listTitleInput.current!.focus();\r\n    }\r\n  };\r\n\r\n  const handleCancel = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    setShowForm(false);\r\n  };\r\n\r\n  return(\r\n    <Form>\r\n      <Form.Group className=\"add-list__form\" controlId=\"exampleForm.ControlTextarea1\" style={{ marginBottom: '0px' }}>\r\n        <Form.Control value={newListTitle} \r\n          onChange={handleChange}\r\n          className=\"add-list__input\" \r\n          placeholder=\"Enter list title...\" \r\n          ref={listTitleInput}\r\n       />\r\n        <Form.Group style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '3px'}}>\r\n          <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit} style={{ marginTop: '8px' }}>\r\n            Submit\r\n          </Button>\r\n          <Button variant=\"danger\" type=\"submit\" onClick={handleCancel} style={{ marginTop: '8px' }} >\r\n            Cancel\r\n          </Button>\r\n        </Form.Group>\r\n        \r\n      </Form.Group>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default AddListForm;","import React, { useContext, useState } from 'react';\r\nimport { Comment, List, Task } from '../../types';\r\nimport { DataContext } from '../DataContext';\r\nimport { UserContext } from '../UserContext';\r\nimport './commentComponent.css';\r\nimport { BsChatFill } from \"react-icons/bs\";\r\n\r\ninterface IProps {\r\n  comment: Comment;\r\n  task: Task;\r\n  list: List;\r\n}\r\n\r\nconst CommentComponent: React.FC<IProps> = ({ comment }) => {\r\n  const { dispatch } = useContext(DataContext);\r\n\r\n  const author = useContext(UserContext);\r\n  const date: Date = new Date(comment.createTime);\r\n  const month = date.toLocaleString('en-en', { month: 'short' });\r\n  const day = date.getDate();\r\n  const time = date.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\r\n\r\n\r\n  /* Delete comment */\r\n  const hancleClickDeleteComment = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    dispatch({\r\n      type: 'DELETE_TASK_COMMENT',\r\n      payload: { commentId: comment.id }\r\n    })\r\n  };\r\n  \r\n\r\n  /* Edit comment */\r\n  const [edit, setEdit] = useState(false);\r\n  const [editedComment, setEditedComment] = useState(comment.text);\r\n\r\n  const handleEditComment = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    setEdit(!edit);\r\n  };\r\n\r\n  const hancleClickEditComment = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    setEdit(true);\r\n  };\r\n  \r\n  const handleCommentChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setEditedComment(e.target.value);\r\n  }\r\n\r\n  const hancleSubmitEditComment = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    dispatch({\r\n      type: 'EDIT_TASK_COMMENT',\r\n      payload: {commentId: comment.id, newCommentText: editedComment}\r\n    })\r\n    setEdit(false);\r\n  };\r\n\r\n\r\n  \r\n  // Для автоматического увеличения высоты texarea\r\n  const textAreaAdjust = (e: any) => {\r\n    e.target.style.height = '1px';\r\n    e.target.style.height = e.target.scrollHeight +'px';\r\n  };\r\n\r\n\r\n  return (\r\n    <div key={comment.id} className=\"comment__wrapper\">\r\n      <div className=\"comment__header\">\r\n        <span className=\"comment__author\">{comment.author}</span>\r\n        <span className=\"comment__date\">{month + ' ' + day + ' at ' + time}</span>\r\n      </div>\r\n      <div className=\"comment__body\">\r\n        <span className=\"comment__icon\"><BsChatFill /></span>\r\n        {!edit && <div className=\"comment__card\">\r\n          <p className=\"comment__text\">{comment.text}</p>\r\n        </div>}\r\n      </div>\r\n      <div className=\"comment__footer\">\r\n        {((comment.author === author.username) && !edit) && <span className=\"comment__edit\" onClick={hancleClickEditComment}>Edit</span>}\r\n          <div className={`task-description__edit ${!edit ? 'edit_closed' : ''}`}>\r\n              <textarea onKeyUp={textAreaAdjust} value={editedComment} onChange={handleCommentChange} className=\"description-edit__texarea card-description\" placeholder=\"Oh, have you changed your mind?\" >\r\n              </textarea>\r\n              <div className=\"edit-controls\">\r\n                <input className=\"\" disabled={editedComment.length === 0} type=\"submit\" value=\"Save\" onClick={hancleSubmitEditComment}/>\r\n                <span className=\"edit-controls__cancel-icon icon-sm\" onClick={handleEditComment}>&#10006;</span>\r\n              </div>\r\n          </div>\r\n        {((comment.author === author.username) && !edit) && <span className=\"comment__edit\" onClick={hancleClickDeleteComment}>Deliete</span>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentComponent;","import React, { useContext } from 'react';\r\nimport { Task, List } from '../../types';\r\nimport { DataContext } from '../DataContext';\r\nimport CommentComponent from '../Comment/CommentComponent';\r\nimport './commentsList.css'\r\n\r\ninterface IProps {\r\n  task: Task;\r\n  list: List;\r\n}\r\n\r\nconst CommentsList: React.FC<IProps> = ({ task, list }) => {\r\n  const { state } = useContext(DataContext);\r\n  return (\r\n    <div className=\"comments-box\">\r\n      {state.comments.filter(comment => comment.taskId === task.id)\r\n                     .map(comment => <CommentComponent key={comment.id} comment={comment} task={task} list={list} />)}   \r\n    </div>  \r\n  )\r\n};\r\n\r\nexport default CommentsList;","import React, { SetStateAction, useContext, useRef, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Comment, List, Task } from '../../types';\r\nimport { UserContext } from '../UserContext';\r\nimport './taskModal.css';\r\nimport { DataContext } from '../DataContext';\r\nimport CommentsList from '../CommentsList/CommentsList';\r\nimport { IoIosChatbubbles } from \"react-icons/io\";\r\nimport { MdDescription } from \"react-icons/md\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\ninterface IProps {\r\n  task: Task;\r\n  taskModalShow: boolean;\r\n  setTaskModalShow: React.Dispatch<SetStateAction<boolean>>;\r\n  list: List;\r\n}\r\n\r\n\r\nconst TaskModal: React.FC<IProps> = ({ task, list, setTaskModalShow,  taskModalShow}) => {\r\n  const { dispatch } = useContext(DataContext);\r\n\r\n     /* get current username from context*/\r\n  const currentUser = useContext(UserContext);\r\n  const author = currentUser.username;\r\n  \r\n  \r\n  const ref = useRef(null);\r\n  const handleCloseModal = () => {\r\n    setTaskModalShow(false);\r\n  }\r\n\r\n  const handleTitleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    dispatch({\r\n      type: 'RENAME_TASK',\r\n      payload: {taskId: task.id, newTitle: e.target.value}\r\n    })\r\n  };\r\n\r\n  const handleTitleBlur = (e: React.FocusEvent<HTMLTextAreaElement>) => {\r\n    if(e.target.value.length < 1) {\r\n      e.target.focus();\r\n    }\r\n  }\r\n\r\n  const [edit, setEdit] = useState(false);\r\n  const handleEditDescription = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    setEdit(!edit);\r\n  };\r\n\r\n\r\n  const [description, setDescription] = useState(task.description);\r\n  const handleDescriptionChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setDescription(e.target.value);\r\n  }\r\n   \r\n  const handleDescriptionSubmit = (e: React.MouseEvent<HTMLInputElement>) => {\r\n     //task.description = description;\r\n    dispatch({\r\n      type: 'EDIT_TASK_DESCRIPTION',\r\n      payload: { taskId: task.id, newDesc: description }\r\n    })\r\n    setEdit(false);\r\n  }\r\n  \r\n  const handleClickDeleteTask = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    dispatch({\r\n      type: 'DELETE_TASK',\r\n      payload: {taskId: task.id}\r\n    })\r\n    dispatch({\r\n      type: 'DELETE_ALL_TASK_COMMENTS',\r\n      payload: { taskId: task.id }\r\n    })\r\n   };\r\n\r\n\r\n\r\n   /* add comment */\r\n  const [newComment, setNewComment] = useState('');\r\n  const handleCommentChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setNewComment(e.target.value);\r\n  };\r\n\r\n  const handleCommentSubmit = (e: React.MouseEvent<HTMLInputElement>) => {\r\n    e.preventDefault();\r\n    const addedComment:Comment = { id: uuidv4(), taskId: task.id, text: newComment, author: author!, createTime: new Date()};\r\n    dispatch({\r\n      type: 'ADD_TASK_COMMENT',\r\n      payload: { newComment: addedComment}\r\n    })\r\n    setNewComment('')\r\n  }\r\n\r\n\r\n  // Для автоматического увеличения высоты texarea\r\n  const textAreaAdjust = (e: any) => {\r\n    e.target.style.height = '1px';\r\n    e.target.style.height = e.target.scrollHeight +'px';\r\n  };\r\n\r\n\r\n  const handleToggleTaskCompleted = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch({\r\n      type: 'TOGGLE_TASK_COMPLETED',\r\n      payload: { taskId: task.id }\r\n    })\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={taskModalShow}\r\n      onHide={handleCloseModal}\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n      dialogClassName=\"task-modal__wrapper\"\r\n      animation={false}\r\n      centered \r\n      ref={ref}\r\n    >\r\n        <span className=\"icon-sm icon-delete task-modal__close\" onClick={handleCloseModal}>&#10006;</span>\r\n        <div className=\"task-details u-clearfix\">\r\n          <div className=\"task-details__header\">\r\n            <span className=\"task-details__icon\">&#128073;</span>\r\n            <div className=\"task-details__title\">\r\n              <textarea value={task.title} onKeyUp={textAreaAdjust} className={`task-details__title task-details__input ${task.complete ? 'complete' : \r\n            ''}`} onChange={handleTitleChange} onBlur={handleTitleBlur} required></textarea>\r\n            </div>\r\n            <div className=\"task-details__list-info\">\r\n              <p className=\"u-inline-block u-bottom\">in list <span className=\"task-details__list-name\">{list.title}</span></p>\r\n            </div>\r\n          </div>\r\n          <div className=\"task-details__main\">\r\n            <div className=\"task-details__task-description\">\r\n              \r\n              <div className=\"task-description__title\">\r\n                <span className=\"task-description__icon\"><MdDescription /></span>\r\n                <h3 className=\"task-description__heading\">Description</h3>\r\n                <div className=\"task-description__task-editable\">\r\n                  <button className=\"task-editable__button\" onClick={handleEditDescription}>Edit</button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"task-description__text\">\r\n                {(task.description && !edit) ? <p>{task.description}</p> : \"\"}\r\n                <div className={`task-description__edit ${!edit ? 'edit_closed' : ''}`}>\r\n                  <textarea onKeyUp={textAreaAdjust} value={description} onChange={handleDescriptionChange} className=\"description-edit__texarea card-description\" placeholder=\"Add a more detailed description…\" >\r\n                  </textarea>\r\n                  <div className=\"edit-controls\">\r\n                    <input className=\"edit-controls__save-btn\" type=\"submit\" value=\"Save\" onClick={handleDescriptionSubmit}/>\r\n                    <span className=\"edit-controls__cancel-icon icon-sm\" onClick={handleEditDescription}>&#10006;</span>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n              <div className=\"task-description__title task-description__title_author\">\r\n                <span className=\"task-description__author-icon\">&#9997;</span>\r\n                <h3 className=\"task-description__heading\">Author</h3>\r\n              </div>\r\n              <div className=\"task-description__text\">\r\n                <p>{task.username}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"task-details__task-activities\">\r\n\r\n              <div className=\"task-description__title task-description__title_author\">\r\n                <span className=\"task-description__icon\"><IoIosChatbubbles /></span>\r\n                <h3 className=\"task-description__heading\">Activity</h3>\r\n                <div className=\"task__complete\">\r\n                  <span>Set as completed: &nbsp;</span>\r\n                  <input className=\"card__checkbox\" type=\"checkbox\" aria-label=\"Checkbox for following text input\" checked={task.complete} onChange={handleToggleTaskCompleted} />  \r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"task-comments\">\r\n                <form>\r\n                  <div className=\"comment-box\">\r\n                    <textarea className=\"comment-box__input\" value={newComment} placeholder=\"Write a comment…\" onKeyUp={textAreaAdjust}         onChange={handleCommentChange}>\r\n                    </textarea>\r\n                    <div className=\"comment-box__save\">\r\n                      <input className=\"\" disabled={newComment.length === 0} type=\"submit\" value=\"Save\" onClick={handleCommentSubmit}></input>\r\n                      <p className=\"author\">author:&nbsp;<span className=\"author-initials\" title={author!} aria-label={author!}>{\" \" + author}</span></p>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n              {/* <!-- /.task-comments --> */}\r\n              <CommentsList list={list} task={task} />\r\n            </div>\r\n \r\n          </div>\r\n     \r\n          <button className=\"task-editable__button delete-button\" onClick={handleClickDeleteTask}>Delete</button>\r\n\r\n        </div> \r\n        {/* <!-- /.task-details --> */}\r\n\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default TaskModal;","import React, { useContext, useState } from 'react';\r\nimport { List, Task, Comment } from '../../types';\r\nimport { DataContext } from '../DataContext';\r\nimport TaskModal from '../TaskModal/TaskModal';\r\nimport './taskCard.css';\r\nimport { BsChatFill } from \"react-icons/bs\";\r\n\r\ninterface IProps {\r\n  task: Task;\r\n  list: List;\r\n};\r\n\r\nconst TaskCard: React.FC<IProps> = ({ task, list }) => {\r\n  const { dispatch, state } = useContext(DataContext);\r\n  \r\n  const handleDeleteTask = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    dispatch({\r\n      type: 'DELETE_TASK',\r\n      payload: { taskId: task.id}\r\n    })\r\n    dispatch({\r\n      type: 'DELETE_ALL_TASK_COMMENTS',\r\n      payload: { taskId: task.id }\r\n    })\r\n  };\r\n\r\n\r\n  const [taskModalShow, setTaskModalShow] = useState(false);\r\n\r\n  const handleShowModal = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    setTaskModalShow(true);\r\n  };\r\n\r\n\r\n    //подсчет кол-ва комментов в этой задачке\r\n  const commentsCount = state.comments.filter((comment: Comment) => comment.taskId === task.id).length;\r\n  \r\n  return( \r\n    <>\r\n      <div className=\"card\" key={ task.title }>\r\n        <div className=\"card__details\">\r\n          <div className=\"card__header\">\r\n            <span className={`card__title ${task.complete ? \"complete\" : \"\"}`} onClick={handleShowModal} >{task.title}</span>\r\n            <span className=\"icon-sm icon-delete\" onClick={handleDeleteTask}>&#10006;</span>\r\n          </div>\r\n          <div className=\"card__badges\" onClick={handleShowModal}>\r\n            <div className=\"card__badge\">\r\n              <span className=\"badge__icon badge__icon_sm badge__icon_comment\" ><BsChatFill /></span>\r\n              <span className=\"badge__text\">{commentsCount}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <TaskModal taskModalShow={taskModalShow} setTaskModalShow={setTaskModalShow} task={task} list={list} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskCard;","import React, { SetStateAction, useContext, useRef, useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { List } from '../../types';\r\nimport { DataContext } from '../DataContext';\r\nimport { UserContext } from '../UserContext';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './addTaskform.css';\r\n\r\ninterface IProps {\r\n  setOpened: React.Dispatch<SetStateAction<boolean>>;\r\n  list: List;\r\n}\r\n\r\nconst AddTaskform: React.FC<IProps> = ({ setOpened, list }) => {\r\n  \r\n  const { dispatch } = useContext(DataContext);\r\n\r\n  //add task\r\n  const [newTask, setNewTask] = useState('');\r\n  const { username } = useContext(UserContext);\r\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setNewTask(e.target.value);\r\n  };\r\n\r\n  const textInput = useRef<HTMLTextAreaElement>(null);\r\n  const handleSubmit = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    if(newTask.length > 0) {\r\n      dispatch({\r\n        type: 'ADD_TASK',\r\n        payload: { taskId: uuidv4(), listId: list.id, newTaskTitle: newTask, username: username!}\r\n      })\r\n      \r\n      setOpened(false);\r\n    } else {      \r\n      textInput.current!.focus();\r\n    }\r\n  };\r\n\r\n  //cancel add\r\n  const handleCancel = (e: any) => {\r\n    console.log('handleCancel');\r\n    e.preventDefault();\r\n      setOpened(false);\r\n  };\r\n\r\n  \r\n  return(\r\n     <div className=\"task-card__composer\" >\r\n       <div  className=\"card\" >\r\n         <div className=\"card__details\">\r\n            <Form className=\"card-add__form\">\r\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\" style={{ marginBottom: '3px' }}>\r\n                <Form.Control ref={textInput} value={newTask} \r\n                  onChange={handleChange}\r\n                  className=\"card-add__textarea\" \r\n                  placeholder=\"Enter a title for this card…\" \r\n                  as=\"textarea\" \r\n                  rows={3} \r\n                  required\r\n                  autoFocus\r\n                />\r\n                <Form.Group style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '3px' }} >\r\n                  <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n                    Submit\r\n                  </Button>\r\n                  <Button variant=\"danger\" type=\"submit\" onClick={handleCancel}>\r\n                    Cancel\r\n                  </Button>\r\n                </Form.Group>\r\n              </Form.Group>\r\n            </Form>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTaskform;","import React, { useContext, useRef, useState } from 'react';\r\nimport './tasksList.css';\r\nimport TaskCard from '../TaskCard/TaskCard';\r\nimport { List } from '../../types';\r\nimport AddTaskform from '../AddTaskForm/AddTaskform';\r\nimport { useOutsideAlerter } from '../../hooks/useOutsideAlerter';\r\nimport { DataContext } from '../DataContext';\r\n\r\n\r\ninterface IProps {\r\n  list: List;\r\n}\r\n\r\nconst TasksList: React.FC<IProps> = ({ list }) => {\r\n\r\n  const { dispatch, state } = useContext(DataContext);\r\n\r\n \r\n\r\n  const [opened, setOpened] = useState(false);\r\n  const addCard = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    e.preventDefault();\r\n    setOpened(!opened);\r\n  }\r\n\r\n  //List events handlers\r\n  const handleDeleteList = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    dispatch({\r\n      type: 'DELETE_LIST',\r\n      payload: list.id\r\n    });\r\n    dispatch({\r\n      type: 'DELETE_ALL_LIST_TASKS',\r\n      payload: { listId: list.id }\r\n    });\r\n    state.tasks.filter(task => task.listId === list.id)\r\n               .forEach((task) => dispatch(\r\n                  {\r\n                    type: 'DELETE_ALL_TASK_COMMENTS',\r\n                    payload: { taskId: task.id}\r\n                  }\r\n                ));\r\n  };\r\n\r\n  const listTitleInput = useRef<HTMLTextAreaElement>(null);\r\n  \r\n  const handleRenameList = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    dispatch({\r\n      type: 'RENAME_LIST',\r\n      payload: { listId: list.id, newTitle: e.target.value }\r\n    })\r\n  };\r\n\r\n  const handleBlurList = (e: React.FocusEvent<HTMLTextAreaElement>) => {\r\n    if(e.target.value.length < 1) {\r\n      e.target.focus();\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const textAreaAdjust = (e: any) => {\r\n    e.target.style.height = '1px';\r\n    e.target.style.height = e.target.scrollHeight +'px';\r\n  };\r\n\r\n\r\n  //подсчет кол-ва заданий в этом листе\r\n  const tasksCount = state.tasks.filter(task => task.listId === list.id).length;\r\n\r\n  /* хук для отлова клика за элементом */\r\n  const wrapperRef = useRef(null);\r\n  useOutsideAlerter(wrapperRef, setOpened);\r\n\r\n\r\n\r\n  return(\r\n    <div className=\"tasks-list\" >\r\n      <div className=\"tasks-list__content\">\r\n        <div className=\"tasks-list__header\">\r\n          <textarea ref={listTitleInput}  className=\"tasks-list__title\" value={list.title} onKeyUp={textAreaAdjust} onChange={handleRenameList} onBlur={handleBlurList} />\r\n          <span className=\"icon-sm icon-delete\" onClick={handleDeleteList}>&#10006;</span>\r\n        </div>\r\n        <div className=\"tasks-list__cards u-fancy-scrollbar\">\r\n          {state.tasks.filter(task => task.listId === list.id)\r\n                      .map(task => <TaskCard key={task.id} list={list} task={task} />)}\r\n          {opened && <div ref={wrapperRef}><AddTaskform setOpened={setOpened} list={list} /></div>}        \r\n        </div>\r\n        {!opened && <div className='tasks-list__card-composer '>\r\n          <div className=\"tasks-composer__open\">\r\n            <span className=\"icon-sm icon-add\"></span>\r\n            <span className=\"js-add-another-card\" onClick={addCard}>{tasksCount > 0 ? 'Add another card' : 'Add card'}</span>\r\n          </div> \r\n        </div>}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default TasksList;\r\n\r\n","import React, { useRef, useState } from 'react';\r\nimport { useOutsideAlerter } from '../../hooks/useOutsideAlerter';\r\nimport { List } from '../../types';\r\nimport AddListForm from '../AddListForm/AddListForm';\r\nimport TasksList from '../TasksList/TasksList';\r\n\r\nimport './main.css';\r\n\r\ninterface IProps {\r\n  lists: Array<List>\r\n}\r\n\r\nconst Main: React.FC<IProps> = ({ lists }) => {\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const toggleAddList = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n    e.preventDefault();\r\n    setShowForm(true);\r\n  };\r\n\r\n\r\n  /* хук для отлова клика за элементом */\r\n  const wrapperRef = useRef(null);\r\n  useOutsideAlerter(wrapperRef, setShowForm);\r\n\r\n  return(\r\n    <> \r\n      <main>\r\n        <div id=\"board\" className=\"board u-fancy-scrollbar\">\r\n          {lists.map(list => {\r\n            return (\r\n              <TasksList key={list.id} list={list} />\r\n            )\r\n          })}\r\n          <div ref={wrapperRef} className={`tasks-list__add-list tasks-list ${showForm ? \"mod-add\" : \"\"}`}>\r\n            {showForm ? <div ><AddListForm setShowForm={setShowForm}/></div> : ''}\r\n            <span className={`add-list__placeholder ${showForm ? \"hide\" : \"\"}`} onClick={toggleAddList}>\r\n              <span className=\"icon-sm icon-add\"></span>\r\n              {lists.length > 0 ? 'Add another list' : 'Add list '}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;","import { Task, Comment, State } from \"./types\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport type Actions = \r\n          | { type: 'ADD_LIST', payload: string } \r\n          | { type: 'DELETE_LIST', payload: string } \r\n          | { type: 'RENAME_LIST', payload: { listId: string, newTitle: string} }\r\n          | { type: 'ADD_TASK', payload: { taskId: string, listId: string, username: string, newTaskTitle: string} } \r\n          | { type: 'DELETE_TASK', payload: { taskId: string } } \r\n          | { type: 'RENAME_TASK', payload: { taskId: string, newTitle: string} } \r\n          | { type: 'TOGGLE_TASK_COMPLETED', payload: { taskId: string } } \r\n          | { type: 'EDIT_TASK_DESCRIPTION', payload: { taskId: string, newDesc: string} } \r\n          | { type: 'ADD_TASK_COMMENT', payload: { newComment: Comment } } \r\n          | { type: 'DELETE_TASK_COMMENT', payload: { commentId: string } } \r\n          | { type: 'EDIT_TASK_COMMENT', payload: { commentId: string, newCommentText: string } } \r\n          | { type: 'DELETE_ALL_TASK_COMMENTS', payload: { taskId: string } }\r\n          | { type: 'DELETE_ALL_LIST_TASKS', payload: { listId: string } }\r\n              \r\n\r\nconst dataReducer = (state: State , action: Actions) => {\r\n  switch (action.type) {\r\n    case 'ADD_LIST': \r\n      return {...state, lists: [...state.lists, \r\n                      {\r\n                        id: uuidv4(), \r\n                        title: action.payload, \r\n                      }]};\r\n    case 'DELETE_LIST':\r\n      return {...state, lists: state.lists.filter(list => list.id !== action.payload)};\r\n    case 'RENAME_LIST':\r\n      return {...state, lists: state.lists.map(list => \r\n                    list.id === action.payload.listId\r\n                    ? {...list, title: action.payload.newTitle}\r\n                    : list)};\r\n    case 'ADD_TASK':\r\n      const added: Task = { id: action.payload.taskId, listId: action.payload.listId, title: action.payload.newTaskTitle, description: \"\", username: action.payload.username || \"\", complete: false, createTime: new Date()};\r\n      return {...state, tasks: [...state.tasks, added]};\r\n    case 'DELETE_TASK':\r\n      return {...state, tasks: state.tasks.filter(task => task.id !== action.payload.taskId)};\r\n    case 'RENAME_TASK':\r\n      return {...state, tasks: state.tasks.map(task => \r\n                    task.id === action.payload.taskId\r\n                    ? {...task, title: action.payload.newTitle}\r\n                    : task)};\r\n    case 'TOGGLE_TASK_COMPLETED':\r\n      return {...state, tasks: state.tasks.map(task => \r\n                    task.id === action.payload.taskId\r\n                    ? {...task, complete: !task.complete}\r\n                    : task)};\r\n    case 'EDIT_TASK_DESCRIPTION':\r\n      return {...state, tasks: state.tasks.map(task => \r\n                    task.id === action.payload.taskId\r\n                    ? {...task, description: action.payload.newDesc}\r\n                    : task)};\r\n    case 'ADD_TASK_COMMENT':\r\n      return {...state, comments: [...state.comments, action.payload.newComment]};\r\n    case 'DELETE_TASK_COMMENT':\r\n      return {...state, comments: state.comments.filter(comment => \r\n                      comment.id !== action.payload.commentId\r\n                    )}\r\n    case 'EDIT_TASK_COMMENT':\r\n      return {...state, comments: state.comments.map(comment => \r\n                      comment.id === action.payload.commentId \r\n                      ? {...comment, text: action.payload.newCommentText}\r\n                      : comment\r\n                    )};\r\n   case 'DELETE_ALL_TASK_COMMENTS':\r\n      return {...state, comments: state.comments.filter(comment => \r\n                      comment.taskId !== action.payload.taskId\r\n                    )};\r\n   case 'DELETE_ALL_LIST_TASKS':\r\n      return {...state, tasks: state.tasks.filter(task => \r\n                      task.listId !== action.payload.listId\r\n                    )};\r\n    default: \r\n      return state;\r\n  }\r\n} \r\n\r\nexport default dataReducer;","import React, { useEffect, useState, useReducer } from 'react';\nimport Header from './components/Header/Header';\nimport Main from './components/Main/Main';\nimport { UserContext } from './components/UserContext';\nimport { DataContext } from './components/DataContext';\nimport reducer from './reducer';\nimport { List, Task, Comment } from './types';\nimport { v4 as uuidv4 } from 'uuid';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\n\nconst list0Id = uuidv4(),\n      list1Id = uuidv4(),\n      list2Id = uuidv4(),\n      list3Id = uuidv4();\n\nconst task0Id = uuidv4(),\n      task1Id = uuidv4(),\n      task2Id = uuidv4(),\n      task3Id = uuidv4(),\n      task4Id = uuidv4(),\n      task5Id = uuidv4(),\n      task6Id = uuidv4();\n\nconst cooment0Id = uuidv4(),\n      cooment1Id = uuidv4(),\n      cooment2Id = uuidv4(),\n      cooment3Id = uuidv4(),\n      cooment4Id = uuidv4(),\n      cooment5Id = uuidv4();\n\n\nconst initialComments: Array<Comment> = [\n  { id: cooment0Id, taskId: task0Id, text: 'Коммент1', author: \"Ya\", createTime: new Date() }, \n  { id: cooment1Id, taskId: task0Id, text: 'Коммент2', author: \"ывавыа\", createTime: new Date() }, \n  { id: cooment2Id, taskId: task0Id, text: 'Коммент3', author: \"Ya\", createTime: new Date() }, \n  { id: cooment3Id, taskId: task4Id, text: 'Ку-ку', author: \"Ya\", createTime: new Date() }, \n  { id: cooment4Id, taskId: task5Id, text: 'Вот это задачка', author: \"Вомбат\", createTime: new Date() }, \n  { id: cooment5Id, taskId: task6Id, text: 'Блин, походу не сделаю', author: \"Ya\", createTime: new Date() }, \n]\n\n\nconst initialTasks: Array<Task> = [\n  { id: task0Id, listId: list1Id, title: 'В магз за едой', description: \"Не забыть пельмени\", username: \"vasya\", complete: false, createTime: new Date() }, \n  { id: task1Id, listId: list1Id, title: 'Приготовить', description: \"Описание Описание Описание Описание Описание Описание Описание\", username: \"vasya\", complete: true, createTime: new Date() }, \n  { id: task2Id, listId: list1Id, title: 'Съесть', description: \"Съееесть\", username: \"Вомбат\", complete: true, createTime: new Date() },\n  { id: task3Id, listId: list0Id, title: 'Все', description: \"Кайфовать, в общем\", username: \"dsfafw\", complete: true, createTime: new Date() },\n  { id: task4Id, listId: list0Id, title: 'Ку-ку', description: \"Да-да, куку\", username: \"Вомбат\", complete: false, createTime: new Date() }, \n  { id: task5Id, listId: list0Id, title: 'Задачка', description: \"И кто-то должен ее сделать\", username: \"Не вомбат\", complete: true, createTime: new Date() }, \n  { id: task6Id, listId: list0Id, title: 'Еще одна', description: \"И эту тоже\", username: \"Вомбат\", complete: false, createTime: new Date() },\n]\n\nlet initialLists: Array<List> = [\n  { id: list0Id, title: 'TODO' },\n  { id: list1Id, title: 'In Progress' },\n  { id: list2Id, title: 'Testing' },\n  { id: list3Id, title: 'Done' },\n]\n\nconst initialState = {\n  lists: initialLists,\n  tasks: initialTasks,\n  comments: initialComments\n}\n\nif(!localStorage.getItem('data')) {\n  if(initialState) {\n    localStorage.setItem('data', JSON.stringify(initialState));\n  } else {\n    localStorage.setItem('data', JSON.stringify([]));\n  }\n}  \n\nconst App: React.FC = () => {\n  const [state, dispatch] = useReducer(reducer, JSON.parse(localStorage.getItem('data') as string));\n  const name = localStorage.getItem('username');\n  const [username, setUsername] = useState(name);\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(state));\n  }, [state]);\n\n  return (\n    <> \n      <div className=\"app-wrapper\">\n        <DataContext.Provider value={{ state, dispatch }}>\n          <UserContext.Provider value={{ username, setUsername }}>\n            <Header />\n            {name && <Main lists={state.lists} />}\n          </UserContext.Provider>\n        </DataContext.Provider>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}